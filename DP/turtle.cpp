/**
 * –í –ª–µ–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã —Ä–∞–∑–º–µ—Ä–æ–º ùëõ√óùëö –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —á–µ—Ä–µ–ø–∞—à–∫–∞. –û–Ω–∞ —Ö–æ—á–µ—Ç –ø–æ–ø–∞—Å—Ç—å –≤ –ø—Ä–∞–≤—ã–π –Ω–∏–∂–Ω–∏–π —É–≥–æ–ª –∫ —Å–≤–æ–µ–π –ª—é–±–∏–º–æ–π —Å–µ–º—å–µ. –£ –Ω–µ—ë –µ—Å—Ç—å —Å–≤–æ—è –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å: —á–µ—Ä–µ–ø–∞—à–∫–∞ —É–º–µ–µ—Ç —Ö–æ–¥–∏—Ç—å –ª–∏—à—å –≤–ø—Ä–∞–≤–æ, –ª–∏–±–æ –≤–Ω–∏–∑.
 * –ó–∞ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –≤ –∫–ª–µ—Ç–∫–µ, –Ω–∞—Ö–æ–¥—è—â–µ–π—Å—è –Ω–∞ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–∏ ùëñ-–π —Å—Ç—Ä–æ–∫–∏ –∏ ùëó-–≥–æ —Å—Ç–æ–ª–±—Ü–∞, –Ω–∞ —á–µ—Ä–µ–ø–∞—à–∫—É –Ω–∞–∫–ª–∞–¥—ã–≤–∞–µ—Ç—Å—è —à—Ç—Ä–∞—Ñ –≤ —Ä–∞–∑–º–µ—Ä–µ ùëéùëñùëó —Ä—É–±–ª–µ–π. –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ, —á–µ—Ä–µ–ø–∞—à–∫–∞ —Ö–æ—á–µ—Ç –¥–æ–π—Ç–∏ –¥–æ —Å–µ–º—å–∏ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º —Å—É–º–º–∞—Ä–Ω—ã–º —à—Ç—Ä–∞—Ñ–æ–º. –ü–æ–º–æ–≥–∏—Ç–µ –µ–π —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ.
 */

#include <bits/stdc++.h>

using namespace std;

#define meow ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define repeat(i, n) for(int (i)=0; (i)<(n); (i)++)

vector<vector<int>> penalty;
vector<vector<int>> f;

signed main() {
    meow
    int N, M;
    cin >> N >> M;
    penalty.resize(N);
    int q;
    repeat(i, N) {
        repeat(j, M) {
            cin >> q;
            penalty[i].push_back(q);
        }
    }
    f.resize(N);
    repeat(i, N) {
        f[i].resize(M);
    }
    f[0][0] = penalty[0][0];
    for (int i = 1; i < M; i++) {
        f[0][i] = f[0][i - 1] + penalty[0][i];
    }

    for (int i = 1; i < N; i++) {
        f[i][0] = f[i - 1][0] + penalty[i][0];
    }
    if (N != 1 && M != 1) {
        for (int i = 1; i < N; i++) {
            for (int j = 1; j < M; j++) {
                f[i][j] = min(f[i - 1][j], f[i][j - 1]) + penalty[i][j];
            }
        }
    }
    cout << f[N - 1][M - 1];
}